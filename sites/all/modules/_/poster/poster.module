<?php

/**
 * Implements hook_menu().
 */
function poster_menu() {
  $items = array();
  $items['posts'] = array(
    'title' => 'Poster',
    'page callback' => 'poster_page',
    'access callback' => 'statuses_user_access',
    'access arguments' => array('add'),
    'description' => 'Allows users to share statuses.',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function poster_page()
{
  return '';
}

/**
 * Implements hook_block_info().
 */
function poster_block_info()
{
  $blocks = array(
    'poster' => [
      'info' => t('Poster'),
      'cache' => DRUPAL_NO_CACHE,
    ],
    'news_menu' => [
      'info' => t('News menu'),
      'cache' => DRUPAL_CACHE_PER_ROLE,
      'region' => 'sidebar_second',
    ],
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function poster_block_view($delta = '')
{
  global $user;

  $block = array();

  switch ($delta) {
    case 'poster':
      $block['subject'] = t('Poster');
      $block['content'] = drupal_get_form('poster_form');

      return $block;
    case 'news_menu':
      $block['subject'] = t('News menu');
      $block['content'] = _news_menu_block_content();

      return $block;
  }
}

/**
 * ---------------- Изменения Statuses Form ------------------------------------
 */

/**
 * hook_form_FORM_ID_alter
 */
function poster_form_statuses_box_alter(&$form, &$form_state)
{
  // добавить фото
  global $user;
  $photo_style = 'thumbnail';
  $photo_uri = 'public://default_images/no_photo.png';
  $user_wrapper = entity_metadata_wrapper('user', $user);
  if (!empty($user_wrapper->value()->picture)) {
    $photo_uri = $user_wrapper->value()->picture->uri;
  }
  $photo = image_style_url($photo_style, $photo_uri);
  $form['fbss-photo'] = [
    '#markup' => '<img src="' . $photo . '" class="img-circle"/>',
    '#weight' => -51,
  ];


  // убрать стандартное оформление
  $form['fbss-submit']['#attributes']['class'] = ['btn-primary'];
  unset($form['fbss-status']['#prefix']);
  unset($form['fbss-status']['#suffix']);

  // кнопку перенести в Actions для офрмления
  $form['actions'] = array('#type' => 'actions');
  $form['actions']['fbss-submit'] = $form['fbss-submit'];
  $form['actions']['fbss-submit']['#weight'] = 0;
  $form['actions']['fbss-submit']['#attributes']['class'][] = 'pull-right';
  unset($form['fbss-submit']);

}





function poster_form($form, &$form_state)
{
  global $user;
  $photo_style = 'thumbnail';
  $photo_uri = 'public://default_images/no_photo.png';

  $user_wrapper = entity_metadata_wrapper('user', $user);
  if (!empty($user_wrapper->value()->picture)) {
    $photo_uri = $user_wrapper->value()->picture->uri;
  }

  $photo = image_style_url($photo_style, $photo_uri);


  $form = [
    '#attributes' => ['class' => ['poster']],
  ];

  $form['top'] = [
    '#type' => 'container',
    '#attributes' => ['class' => ['media']],
  ];
  $form['top']['photo'] = [
    '#markup' => '<div class="media-left"><img src="' . $photo . '" class="img-circle"/></div>',
  ];
  $form['top']['text'] = [
    '#type' => 'textarea',
    '#rows' => 2,
    '#attributes' => [
      'class' => ['autoExpand'],
      'placeholder' => t('What\'s new?'),
      'data-min-rows' => 2,
    ],
    '#prefix' => '<div class="media-body">',
    '#suffix' => '</div>',
  ];

  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Post'),
    '#attributes' => ['class' => ['pull-right']],
  );

  return $form;
}

function poster_form_validate(&$form, &$form_state)
{
  if (drupal_strlen($form_state['values']['text']) < 2) form_set_error('top][text', 'Текст сообщения должен ыбть не короче 2 символов!');
}

function poster_form_submit(&$form, &$form_state)
{
  $node = entity_create('node', array(
    'type' => 'article',
    'title' => 'article',
    'uid' => $GLOBALS['user']->uid,
    'status' => 1,
    'promote' => 0,
    'field_text' => array(
      'und' => array(
        array(
          'value' => $form_state['values']['text'],
          'format' => 'filtered_html',
        ),
      ),
    ),
  ));
  node_save($node);
}

function _news_menu_block_content()
{
  $tree = menu_tree_page_data('menu-news');

  // Localize the tree.
  if (module_exists('i18n_menu')) {
    $tree = i18n_menu_localize_tree($tree);
  }

  // Build links.
  $profile_nav = menu_tree_output($tree);

  return render($profile_nav);
}